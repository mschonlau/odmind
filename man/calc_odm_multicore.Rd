% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_odm_multicore.R
\name{calc_odm_multicore}
\alias{calc_odm_multicore}
\title{calc_odm (multicore)}
\usage{
calc_odm_multicore(
  profile_string,
  source_locations,
  target_locations,
  max_chunk_size,
  ors_url
)
}
\arguments{
\item{profile_string}{Route profile}

\item{source_locations}{sf object of geometry type point containing the
sources with coordinates in separate x, y columns}

\item{target_locations}{data.frame containing the targets with coordinates
in separate x, y columns}

\item{max_chunk_size}{integer value defining the maximum number of source
to target connections to be processed per loop}

\item{ors_url}{url of the openrouteservice server to be used for processing}
}
\value{
odm-object of type list encompassing duration and distance matrices
and the source and target locations
}
\description{
Looped calculation of duration and distance matrices between all
sources and targets (multicore)
}
\examples{
\dontrun{
data(testdata)
sources <- testdata$od_result$sources
targets <- testdata$od_result$targets
# The testdata dataset is too small to generate time benefits out of using
# parallel processing. It should be applied to larger datasets
max_chunk_size <- 200 # depends on the config of the OpenRouteService server
ors_url <- "SERVER URL"
cl <- makeCluster(detectCores() - 1)
registerDoSNOW(cl)
res <- calc_odm_multicore(
  profile_string = "foot-walking",
  source_locations = sources,
  target_locations = targets,
  max_chunk_size = max_chunk_size,
  ors_url = ors_url
)
}
}
\seealso{
\code{calc_odm()} for sequential odm_object creation with one core
}
